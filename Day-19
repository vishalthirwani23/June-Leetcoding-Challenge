https://leetcode.com/explore/featured/card/june-leetcoding-challenge/541/week-3-june-15th-june-21st/3365/
Code:

class Solution {
public:
    long long mod = 1e9 +7;
    int n;
   
    string validate(int len , string S,vector<long long> power){
        if(len==0) return "";
          unordered_map<long long , vector<int>> m;
        long long hash=0;
        for(int i=0;i<len;i++)
          hash=((hash*26)%mod+S[i]-'a')%mod;
        m[hash].push_back(0);
        for(int i=len;i<n;i++){
            hash=((hash-power[len-1]*(S[i-len]-'a'))%mod + mod)%mod;
            hash=(hash*26+(S[i]-'a'))%mod;
            if(m.find(hash)==m.end())
                m[hash].push_back(i-len+1);
            else{
                for(auto it:m[hash]){
                     if (strcmp((S.substr(it, len)).data(), S.substr(i - len + 1, len).data()) == 0) 
                    return S.substr(it, len);
                }
                m[hash].push_back(i-len+1);
            }
        }
            return "";
            
    }
  
    
    string longestDupSubstring(string S) {
       if(S.empty()) return "";
        string ans="";
        int start=0,end=S.length();
        n=end;
        vector<long long> power(n,1);
        
        for(int i=1;i<n;i++)
            power[i]=(power[i-1]*26)%mod;
        while(start<=end){
            int mid=start+(end-start)/2;
            string temp=validate(mid,S,power);
            if(temp.length()==0){
                end=mid-1;
            }
            else{
                if(temp.length()>ans.length())
                    ans=temp;
                start=mid+1;
            }
            
        }
        return ans;
    }
};



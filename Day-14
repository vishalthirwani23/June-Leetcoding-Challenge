https://leetcode.com/explore/featured/card/june-leetcoding-challenge/540/week-2-june-8th-june-14th/3360/
Code:

class Solution {
public:
    int findCheapestPrice(int n, vector<vector<int>>& flights, int src, int dst, int K) {
        vector<int> dist(n,INT_MAX);
        dist[src]=0;
        for(int i=1;i<=K+1;i++){
            for(int j=0;j<flights.size();j++){
                int x1=flights[j][0],x2=flights[j][1],x3=flights[j][2];
                if(dist[x1]!=INT_MAX && dist[x1]+x3<dist[x2])
                    dist[x2]=dist[x1]+x3;
            }
        }
        return dist[dst]==INT_MAX?-1:dist[dst];
    }
};
